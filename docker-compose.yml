version: '3.8'

services:
  db:
    image: postgres
    container_name: backend_db
    restart: always
    env_file: 
      - .env
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME} -d ${DATABASE_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: backend_rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "5672:5672"   # AMQP
      - "15672:15672" # Management UI
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: app/Dockerfile
    container_name: fastapi_api
    restart: always
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    env_file: 
      - .env
    ports:
      - "8080:8080"
    networks:
      - app-network

  consumer:
    build:
      context: .
      dockerfile: consumer/Dockerfile
    container_name: rabbitmq_consumer
    restart: always
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - .env
    networks:
      - app-network

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - app-network
    depends_on:
      - api

  grafana:
    image: grafana/grafana
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      - prometheus
    

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://${DATABASE_USERNAME}:${DATABASE_PASSWORD}@db:5432/${DATABASE_NAME}?sslmode=disable"
    ports:
      - "9187:9187"
    networks:
      - app-network
    depends_on:
      - db
    env_file:
      - .env

  rabbitmq-exporter:
    image: kbudde/rabbitmq-exporter
    environment:
      RABBIT_URL: "http://rabbitmq:15672"
      RABBIT_USER: "${RABBITMQ_USER}"
      RABBIT_PASSWORD: "${RABBITMQ_PASSWORD}"
    ports:
      - "9419:9419"
    networks:
      - app-network
    depends_on:
      - rabbitmq
    env_file:
      - .env

volumes:
  postgres_data:
  grafana_data:

networks:
  app-network:
    driver: bridge
